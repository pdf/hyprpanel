// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: hyprpanel/v1/hyprpanel.proto

package hyprpanelv1

import (
	v1 "github.com/pdf/hyprpanel/proto/hyprpanel/config/v1"
	v11 "github.com/pdf/hyprpanel/proto/hyprpanel/event/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SystrayScrollOrientation int32

const (
	SystrayScrollOrientation_SYSTRAY_SCROLL_ORIENTATION_UNSPECIFIED SystrayScrollOrientation = 0
	SystrayScrollOrientation_SYSTRAY_SCROLL_ORIENTATION_VERTICAL    SystrayScrollOrientation = 1
	SystrayScrollOrientation_SYSTRAY_SCROLL_ORIENTATION_HORIZONTAL  SystrayScrollOrientation = 2
)

// Enum value maps for SystrayScrollOrientation.
var (
	SystrayScrollOrientation_name = map[int32]string{
		0: "SYSTRAY_SCROLL_ORIENTATION_UNSPECIFIED",
		1: "SYSTRAY_SCROLL_ORIENTATION_VERTICAL",
		2: "SYSTRAY_SCROLL_ORIENTATION_HORIZONTAL",
	}
	SystrayScrollOrientation_value = map[string]int32{
		"SYSTRAY_SCROLL_ORIENTATION_UNSPECIFIED": 0,
		"SYSTRAY_SCROLL_ORIENTATION_VERTICAL":    1,
		"SYSTRAY_SCROLL_ORIENTATION_HORIZONTAL":  2,
	}
)

func (x SystrayScrollOrientation) Enum() *SystrayScrollOrientation {
	p := new(SystrayScrollOrientation)
	*p = x
	return p
}

func (x SystrayScrollOrientation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SystrayScrollOrientation) Descriptor() protoreflect.EnumDescriptor {
	return file_hyprpanel_v1_hyprpanel_proto_enumTypes[0].Descriptor()
}

func (SystrayScrollOrientation) Type() protoreflect.EnumType {
	return &file_hyprpanel_v1_hyprpanel_proto_enumTypes[0]
}

func (x SystrayScrollOrientation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SystrayScrollOrientation.Descriptor instead.
func (SystrayScrollOrientation) EnumDescriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{0}
}

type SystrayMenuEvent int32

const (
	SystrayMenuEvent_SYSTRAY_MENU_EVENT_UNSPECIFIED SystrayMenuEvent = 0
	SystrayMenuEvent_SYSTRAY_MENU_EVENT_CLICKED     SystrayMenuEvent = 1
	SystrayMenuEvent_SYSTRAY_MENU_EVENT_HOVERED     SystrayMenuEvent = 2
)

// Enum value maps for SystrayMenuEvent.
var (
	SystrayMenuEvent_name = map[int32]string{
		0: "SYSTRAY_MENU_EVENT_UNSPECIFIED",
		1: "SYSTRAY_MENU_EVENT_CLICKED",
		2: "SYSTRAY_MENU_EVENT_HOVERED",
	}
	SystrayMenuEvent_value = map[string]int32{
		"SYSTRAY_MENU_EVENT_UNSPECIFIED": 0,
		"SYSTRAY_MENU_EVENT_CLICKED":     1,
		"SYSTRAY_MENU_EVENT_HOVERED":     2,
	}
)

func (x SystrayMenuEvent) Enum() *SystrayMenuEvent {
	p := new(SystrayMenuEvent)
	*p = x
	return p
}

func (x SystrayMenuEvent) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SystrayMenuEvent) Descriptor() protoreflect.EnumDescriptor {
	return file_hyprpanel_v1_hyprpanel_proto_enumTypes[1].Descriptor()
}

func (SystrayMenuEvent) Type() protoreflect.EnumType {
	return &file_hyprpanel_v1_hyprpanel_proto_enumTypes[1]
}

func (x SystrayMenuEvent) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SystrayMenuEvent.Descriptor instead.
func (SystrayMenuEvent) EnumDescriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{1}
}

type NotificationClosedReason int32

const (
	NotificationClosedReason_NOTIFICATION_CLOSED_REASON_UNSPECIFIED NotificationClosedReason = 0
	NotificationClosedReason_NOTIFICATION_CLOSED_REASON_EXPIRED     NotificationClosedReason = 1
	NotificationClosedReason_NOTIFICATION_CLOSED_REASON_DISMISSED   NotificationClosedReason = 2
	NotificationClosedReason_NOTIFICATION_CLOSED_REASON_SIGNAL      NotificationClosedReason = 3
)

// Enum value maps for NotificationClosedReason.
var (
	NotificationClosedReason_name = map[int32]string{
		0: "NOTIFICATION_CLOSED_REASON_UNSPECIFIED",
		1: "NOTIFICATION_CLOSED_REASON_EXPIRED",
		2: "NOTIFICATION_CLOSED_REASON_DISMISSED",
		3: "NOTIFICATION_CLOSED_REASON_SIGNAL",
	}
	NotificationClosedReason_value = map[string]int32{
		"NOTIFICATION_CLOSED_REASON_UNSPECIFIED": 0,
		"NOTIFICATION_CLOSED_REASON_EXPIRED":     1,
		"NOTIFICATION_CLOSED_REASON_DISMISSED":   2,
		"NOTIFICATION_CLOSED_REASON_SIGNAL":      3,
	}
)

func (x NotificationClosedReason) Enum() *NotificationClosedReason {
	p := new(NotificationClosedReason)
	*p = x
	return p
}

func (x NotificationClosedReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationClosedReason) Descriptor() protoreflect.EnumDescriptor {
	return file_hyprpanel_v1_hyprpanel_proto_enumTypes[2].Descriptor()
}

func (NotificationClosedReason) Type() protoreflect.EnumType {
	return &file_hyprpanel_v1_hyprpanel_proto_enumTypes[2]
}

func (x NotificationClosedReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationClosedReason.Descriptor instead.
func (NotificationClosedReason) EnumDescriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{2}
}

type ImageNRGBA struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pixels []byte `protobuf:"bytes,1,opt,name=pixels,proto3" json:"pixels,omitempty"`
	Stride uint32 `protobuf:"varint,2,opt,name=stride,proto3" json:"stride,omitempty"`
	Width  uint32 `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height uint32 `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *ImageNRGBA) Reset() {
	*x = ImageNRGBA{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageNRGBA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageNRGBA) ProtoMessage() {}

func (x *ImageNRGBA) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageNRGBA.ProtoReflect.Descriptor instead.
func (*ImageNRGBA) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{0}
}

func (x *ImageNRGBA) GetPixels() []byte {
	if x != nil {
		return x.Pixels
	}
	return nil
}

func (x *ImageNRGBA) GetStride() uint32 {
	if x != nil {
		return x.Stride
	}
	return 0
}

func (x *ImageNRGBA) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *ImageNRGBA) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type AppInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DesktopFile    string            `protobuf:"bytes,1,opt,name=desktop_file,json=desktopFile,proto3" json:"desktop_file,omitempty"`
	Name           string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Icon           string            `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	TryExec        string            `protobuf:"bytes,4,opt,name=try_exec,json=tryExec,proto3" json:"try_exec,omitempty"`
	Exec           []string          `protobuf:"bytes,5,rep,name=exec,proto3" json:"exec,omitempty"`
	RawExec        string            `protobuf:"bytes,6,opt,name=raw_exec,json=rawExec,proto3" json:"raw_exec,omitempty"`
	Path           string            `protobuf:"bytes,7,opt,name=path,proto3" json:"path,omitempty"`
	StartupWmClass string            `protobuf:"bytes,8,opt,name=startup_wm_class,json=startupWmClass,proto3" json:"startup_wm_class,omitempty"`
	Terminal       bool              `protobuf:"varint,9,opt,name=terminal,proto3" json:"terminal,omitempty"`
	Actions        []*AppInfo_Action `protobuf:"bytes,10,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *AppInfo) Reset() {
	*x = AppInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppInfo) ProtoMessage() {}

func (x *AppInfo) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppInfo.ProtoReflect.Descriptor instead.
func (*AppInfo) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{1}
}

func (x *AppInfo) GetDesktopFile() string {
	if x != nil {
		return x.DesktopFile
	}
	return ""
}

func (x *AppInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *AppInfo) GetTryExec() string {
	if x != nil {
		return x.TryExec
	}
	return ""
}

func (x *AppInfo) GetExec() []string {
	if x != nil {
		return x.Exec
	}
	return nil
}

func (x *AppInfo) GetRawExec() string {
	if x != nil {
		return x.RawExec
	}
	return ""
}

func (x *AppInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *AppInfo) GetStartupWmClass() string {
	if x != nil {
		return x.StartupWmClass
	}
	return ""
}

func (x *AppInfo) GetTerminal() bool {
	if x != nil {
		return x.Terminal
	}
	return false
}

func (x *AppInfo) GetActions() []*AppInfo_Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

type PanelServiceInitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host       uint32      `protobuf:"varint,1,opt,name=host,proto3" json:"host,omitempty"`
	Id         string      `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	LogLevel   v1.LogLevel `protobuf:"varint,3,opt,name=log_level,json=logLevel,proto3,enum=hyprpanel.config.v1.LogLevel" json:"log_level,omitempty"`
	Config     *v1.Panel   `protobuf:"bytes,4,opt,name=config,proto3" json:"config,omitempty"`
	Stylesheet []byte      `protobuf:"bytes,5,opt,name=stylesheet,proto3" json:"stylesheet,omitempty"`
}

func (x *PanelServiceInitRequest) Reset() {
	*x = PanelServiceInitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PanelServiceInitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PanelServiceInitRequest) ProtoMessage() {}

func (x *PanelServiceInitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PanelServiceInitRequest.ProtoReflect.Descriptor instead.
func (*PanelServiceInitRequest) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{2}
}

func (x *PanelServiceInitRequest) GetHost() uint32 {
	if x != nil {
		return x.Host
	}
	return 0
}

func (x *PanelServiceInitRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PanelServiceInitRequest) GetLogLevel() v1.LogLevel {
	if x != nil {
		return x.LogLevel
	}
	return v1.LogLevel(0)
}

func (x *PanelServiceInitRequest) GetConfig() *v1.Panel {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *PanelServiceInitRequest) GetStylesheet() []byte {
	if x != nil {
		return x.Stylesheet
	}
	return nil
}

type PanelServiceInitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PanelServiceInitResponse) Reset() {
	*x = PanelServiceInitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PanelServiceInitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PanelServiceInitResponse) ProtoMessage() {}

func (x *PanelServiceInitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PanelServiceInitResponse.ProtoReflect.Descriptor instead.
func (*PanelServiceInitResponse) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{3}
}

type PanelServiceNotifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *v11.Event `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *PanelServiceNotifyRequest) Reset() {
	*x = PanelServiceNotifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PanelServiceNotifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PanelServiceNotifyRequest) ProtoMessage() {}

func (x *PanelServiceNotifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PanelServiceNotifyRequest.ProtoReflect.Descriptor instead.
func (*PanelServiceNotifyRequest) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{4}
}

func (x *PanelServiceNotifyRequest) GetEvent() *v11.Event {
	if x != nil {
		return x.Event
	}
	return nil
}

type PanelServiceNotifyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PanelServiceNotifyResponse) Reset() {
	*x = PanelServiceNotifyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PanelServiceNotifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PanelServiceNotifyResponse) ProtoMessage() {}

func (x *PanelServiceNotifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PanelServiceNotifyResponse.ProtoReflect.Descriptor instead.
func (*PanelServiceNotifyResponse) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{5}
}

type PanelServiceNotificationCloseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PanelServiceNotificationCloseRequest) Reset() {
	*x = PanelServiceNotificationCloseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PanelServiceNotificationCloseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PanelServiceNotificationCloseRequest) ProtoMessage() {}

func (x *PanelServiceNotificationCloseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PanelServiceNotificationCloseRequest.ProtoReflect.Descriptor instead.
func (*PanelServiceNotificationCloseRequest) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{6}
}

func (x *PanelServiceNotificationCloseRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PanelServiceNotificationCloseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PanelServiceNotificationCloseResponse) Reset() {
	*x = PanelServiceNotificationCloseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PanelServiceNotificationCloseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PanelServiceNotificationCloseResponse) ProtoMessage() {}

func (x *PanelServiceNotificationCloseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PanelServiceNotificationCloseResponse.ProtoReflect.Descriptor instead.
func (*PanelServiceNotificationCloseResponse) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{7}
}

type PanelServiceCloseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PanelServiceCloseRequest) Reset() {
	*x = PanelServiceCloseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PanelServiceCloseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PanelServiceCloseRequest) ProtoMessage() {}

func (x *PanelServiceCloseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PanelServiceCloseRequest.ProtoReflect.Descriptor instead.
func (*PanelServiceCloseRequest) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{8}
}

type PanelServiceCloseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PanelServiceCloseResponse) Reset() {
	*x = PanelServiceCloseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PanelServiceCloseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PanelServiceCloseResponse) ProtoMessage() {}

func (x *PanelServiceCloseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PanelServiceCloseResponse.ProtoReflect.Descriptor instead.
func (*PanelServiceCloseResponse) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{9}
}

type HostServiceExecRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action *AppInfo_Action `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *HostServiceExecRequest) Reset() {
	*x = HostServiceExecRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostServiceExecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostServiceExecRequest) ProtoMessage() {}

func (x *HostServiceExecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostServiceExecRequest.ProtoReflect.Descriptor instead.
func (*HostServiceExecRequest) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{10}
}

func (x *HostServiceExecRequest) GetAction() *AppInfo_Action {
	if x != nil {
		return x.Action
	}
	return nil
}

type HostServiceExecResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HostServiceExecResponse) Reset() {
	*x = HostServiceExecResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostServiceExecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostServiceExecResponse) ProtoMessage() {}

func (x *HostServiceExecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostServiceExecResponse.ProtoReflect.Descriptor instead.
func (*HostServiceExecResponse) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{11}
}

type HostServiceFindApplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *HostServiceFindApplicationRequest) Reset() {
	*x = HostServiceFindApplicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostServiceFindApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostServiceFindApplicationRequest) ProtoMessage() {}

func (x *HostServiceFindApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostServiceFindApplicationRequest.ProtoReflect.Descriptor instead.
func (*HostServiceFindApplicationRequest) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{12}
}

func (x *HostServiceFindApplicationRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type HostServiceFindApplicationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppInfo *AppInfo `protobuf:"bytes,1,opt,name=app_info,json=appInfo,proto3" json:"app_info,omitempty"`
}

func (x *HostServiceFindApplicationResponse) Reset() {
	*x = HostServiceFindApplicationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostServiceFindApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostServiceFindApplicationResponse) ProtoMessage() {}

func (x *HostServiceFindApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostServiceFindApplicationResponse.ProtoReflect.Descriptor instead.
func (*HostServiceFindApplicationResponse) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{13}
}

func (x *HostServiceFindApplicationResponse) GetAppInfo() *AppInfo {
	if x != nil {
		return x.AppInfo
	}
	return nil
}

type HostServiceSystrayActivateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusName string `protobuf:"bytes,1,opt,name=bus_name,json=busName,proto3" json:"bus_name,omitempty"`
	X       int32  `protobuf:"varint,2,opt,name=x,proto3" json:"x,omitempty"`
	Y       int32  `protobuf:"varint,3,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *HostServiceSystrayActivateRequest) Reset() {
	*x = HostServiceSystrayActivateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostServiceSystrayActivateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostServiceSystrayActivateRequest) ProtoMessage() {}

func (x *HostServiceSystrayActivateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostServiceSystrayActivateRequest.ProtoReflect.Descriptor instead.
func (*HostServiceSystrayActivateRequest) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{14}
}

func (x *HostServiceSystrayActivateRequest) GetBusName() string {
	if x != nil {
		return x.BusName
	}
	return ""
}

func (x *HostServiceSystrayActivateRequest) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *HostServiceSystrayActivateRequest) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type HostServiceSystrayActivateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HostServiceSystrayActivateResponse) Reset() {
	*x = HostServiceSystrayActivateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostServiceSystrayActivateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostServiceSystrayActivateResponse) ProtoMessage() {}

func (x *HostServiceSystrayActivateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostServiceSystrayActivateResponse.ProtoReflect.Descriptor instead.
func (*HostServiceSystrayActivateResponse) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{15}
}

type HostServiceSystraySecondaryActivateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusName string `protobuf:"bytes,1,opt,name=bus_name,json=busName,proto3" json:"bus_name,omitempty"`
	X       int32  `protobuf:"varint,2,opt,name=x,proto3" json:"x,omitempty"`
	Y       int32  `protobuf:"varint,3,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *HostServiceSystraySecondaryActivateRequest) Reset() {
	*x = HostServiceSystraySecondaryActivateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostServiceSystraySecondaryActivateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostServiceSystraySecondaryActivateRequest) ProtoMessage() {}

func (x *HostServiceSystraySecondaryActivateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostServiceSystraySecondaryActivateRequest.ProtoReflect.Descriptor instead.
func (*HostServiceSystraySecondaryActivateRequest) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{16}
}

func (x *HostServiceSystraySecondaryActivateRequest) GetBusName() string {
	if x != nil {
		return x.BusName
	}
	return ""
}

func (x *HostServiceSystraySecondaryActivateRequest) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *HostServiceSystraySecondaryActivateRequest) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type HostServiceSystraySecondaryActivateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HostServiceSystraySecondaryActivateResponse) Reset() {
	*x = HostServiceSystraySecondaryActivateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostServiceSystraySecondaryActivateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostServiceSystraySecondaryActivateResponse) ProtoMessage() {}

func (x *HostServiceSystraySecondaryActivateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostServiceSystraySecondaryActivateResponse.ProtoReflect.Descriptor instead.
func (*HostServiceSystraySecondaryActivateResponse) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{17}
}

type HostServiceSystrayScrollRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusName     string                   `protobuf:"bytes,1,opt,name=bus_name,json=busName,proto3" json:"bus_name,omitempty"`
	Delta       int32                    `protobuf:"varint,2,opt,name=delta,proto3" json:"delta,omitempty"`
	Orientation SystrayScrollOrientation `protobuf:"varint,3,opt,name=orientation,proto3,enum=hyprpanel.v1.SystrayScrollOrientation" json:"orientation,omitempty"`
}

func (x *HostServiceSystrayScrollRequest) Reset() {
	*x = HostServiceSystrayScrollRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostServiceSystrayScrollRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostServiceSystrayScrollRequest) ProtoMessage() {}

func (x *HostServiceSystrayScrollRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostServiceSystrayScrollRequest.ProtoReflect.Descriptor instead.
func (*HostServiceSystrayScrollRequest) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{18}
}

func (x *HostServiceSystrayScrollRequest) GetBusName() string {
	if x != nil {
		return x.BusName
	}
	return ""
}

func (x *HostServiceSystrayScrollRequest) GetDelta() int32 {
	if x != nil {
		return x.Delta
	}
	return 0
}

func (x *HostServiceSystrayScrollRequest) GetOrientation() SystrayScrollOrientation {
	if x != nil {
		return x.Orientation
	}
	return SystrayScrollOrientation_SYSTRAY_SCROLL_ORIENTATION_UNSPECIFIED
}

type HostServiceSystrayScrollResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HostServiceSystrayScrollResponse) Reset() {
	*x = HostServiceSystrayScrollResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostServiceSystrayScrollResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostServiceSystrayScrollResponse) ProtoMessage() {}

func (x *HostServiceSystrayScrollResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostServiceSystrayScrollResponse.ProtoReflect.Descriptor instead.
func (*HostServiceSystrayScrollResponse) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{19}
}

type HostServiceSystrayMenuContextActivateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusName string `protobuf:"bytes,1,opt,name=bus_name,json=busName,proto3" json:"bus_name,omitempty"`
	X       int32  `protobuf:"varint,2,opt,name=x,proto3" json:"x,omitempty"`
	Y       int32  `protobuf:"varint,3,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *HostServiceSystrayMenuContextActivateRequest) Reset() {
	*x = HostServiceSystrayMenuContextActivateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostServiceSystrayMenuContextActivateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostServiceSystrayMenuContextActivateRequest) ProtoMessage() {}

func (x *HostServiceSystrayMenuContextActivateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostServiceSystrayMenuContextActivateRequest.ProtoReflect.Descriptor instead.
func (*HostServiceSystrayMenuContextActivateRequest) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{20}
}

func (x *HostServiceSystrayMenuContextActivateRequest) GetBusName() string {
	if x != nil {
		return x.BusName
	}
	return ""
}

func (x *HostServiceSystrayMenuContextActivateRequest) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *HostServiceSystrayMenuContextActivateRequest) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type HostServiceSystrayMenuContextActivateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HostServiceSystrayMenuContextActivateResponse) Reset() {
	*x = HostServiceSystrayMenuContextActivateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostServiceSystrayMenuContextActivateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostServiceSystrayMenuContextActivateResponse) ProtoMessage() {}

func (x *HostServiceSystrayMenuContextActivateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostServiceSystrayMenuContextActivateResponse.ProtoReflect.Descriptor instead.
func (*HostServiceSystrayMenuContextActivateResponse) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{21}
}

type HostServiceSystrayMenuAboutToShowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusName    string `protobuf:"bytes,1,opt,name=bus_name,json=busName,proto3" json:"bus_name,omitempty"`
	MenuItemId string `protobuf:"bytes,2,opt,name=menu_item_id,json=menuItemId,proto3" json:"menu_item_id,omitempty"`
}

func (x *HostServiceSystrayMenuAboutToShowRequest) Reset() {
	*x = HostServiceSystrayMenuAboutToShowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostServiceSystrayMenuAboutToShowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostServiceSystrayMenuAboutToShowRequest) ProtoMessage() {}

func (x *HostServiceSystrayMenuAboutToShowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostServiceSystrayMenuAboutToShowRequest.ProtoReflect.Descriptor instead.
func (*HostServiceSystrayMenuAboutToShowRequest) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{22}
}

func (x *HostServiceSystrayMenuAboutToShowRequest) GetBusName() string {
	if x != nil {
		return x.BusName
	}
	return ""
}

func (x *HostServiceSystrayMenuAboutToShowRequest) GetMenuItemId() string {
	if x != nil {
		return x.MenuItemId
	}
	return ""
}

type HostServiceSystrayMenuAboutToShowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HostServiceSystrayMenuAboutToShowResponse) Reset() {
	*x = HostServiceSystrayMenuAboutToShowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostServiceSystrayMenuAboutToShowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostServiceSystrayMenuAboutToShowResponse) ProtoMessage() {}

func (x *HostServiceSystrayMenuAboutToShowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostServiceSystrayMenuAboutToShowResponse.ProtoReflect.Descriptor instead.
func (*HostServiceSystrayMenuAboutToShowResponse) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{23}
}

type HostServiceSystrayMenuEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusName   string           `protobuf:"bytes,1,opt,name=bus_name,json=busName,proto3" json:"bus_name,omitempty"`
	Id        int32            `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	EventId   SystrayMenuEvent `protobuf:"varint,3,opt,name=event_id,json=eventId,proto3,enum=hyprpanel.v1.SystrayMenuEvent" json:"event_id,omitempty"`
	Data      *anypb.Any       `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Timestamp uint32           `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *HostServiceSystrayMenuEventRequest) Reset() {
	*x = HostServiceSystrayMenuEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostServiceSystrayMenuEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostServiceSystrayMenuEventRequest) ProtoMessage() {}

func (x *HostServiceSystrayMenuEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostServiceSystrayMenuEventRequest.ProtoReflect.Descriptor instead.
func (*HostServiceSystrayMenuEventRequest) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{24}
}

func (x *HostServiceSystrayMenuEventRequest) GetBusName() string {
	if x != nil {
		return x.BusName
	}
	return ""
}

func (x *HostServiceSystrayMenuEventRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HostServiceSystrayMenuEventRequest) GetEventId() SystrayMenuEvent {
	if x != nil {
		return x.EventId
	}
	return SystrayMenuEvent_SYSTRAY_MENU_EVENT_UNSPECIFIED
}

func (x *HostServiceSystrayMenuEventRequest) GetData() *anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *HostServiceSystrayMenuEventRequest) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type HostServiceSystrayMenuEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HostServiceSystrayMenuEventResponse) Reset() {
	*x = HostServiceSystrayMenuEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostServiceSystrayMenuEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostServiceSystrayMenuEventResponse) ProtoMessage() {}

func (x *HostServiceSystrayMenuEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostServiceSystrayMenuEventResponse.ProtoReflect.Descriptor instead.
func (*HostServiceSystrayMenuEventResponse) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{25}
}

type HostServiceNotificationClosedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint32                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Reason NotificationClosedReason `protobuf:"varint,2,opt,name=reason,proto3,enum=hyprpanel.v1.NotificationClosedReason" json:"reason,omitempty"`
}

func (x *HostServiceNotificationClosedRequest) Reset() {
	*x = HostServiceNotificationClosedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostServiceNotificationClosedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostServiceNotificationClosedRequest) ProtoMessage() {}

func (x *HostServiceNotificationClosedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostServiceNotificationClosedRequest.ProtoReflect.Descriptor instead.
func (*HostServiceNotificationClosedRequest) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{26}
}

func (x *HostServiceNotificationClosedRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HostServiceNotificationClosedRequest) GetReason() NotificationClosedReason {
	if x != nil {
		return x.Reason
	}
	return NotificationClosedReason_NOTIFICATION_CLOSED_REASON_UNSPECIFIED
}

type HostServiceNotificationClosedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HostServiceNotificationClosedResponse) Reset() {
	*x = HostServiceNotificationClosedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostServiceNotificationClosedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostServiceNotificationClosedResponse) ProtoMessage() {}

func (x *HostServiceNotificationClosedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostServiceNotificationClosedResponse.ProtoReflect.Descriptor instead.
func (*HostServiceNotificationClosedResponse) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{27}
}

type HostServiceNotificationActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ActionKey string `protobuf:"bytes,2,opt,name=action_key,json=actionKey,proto3" json:"action_key,omitempty"`
}

func (x *HostServiceNotificationActionRequest) Reset() {
	*x = HostServiceNotificationActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostServiceNotificationActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostServiceNotificationActionRequest) ProtoMessage() {}

func (x *HostServiceNotificationActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostServiceNotificationActionRequest.ProtoReflect.Descriptor instead.
func (*HostServiceNotificationActionRequest) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{28}
}

func (x *HostServiceNotificationActionRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HostServiceNotificationActionRequest) GetActionKey() string {
	if x != nil {
		return x.ActionKey
	}
	return ""
}

type HostServiceNotificationActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HostServiceNotificationActionResponse) Reset() {
	*x = HostServiceNotificationActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostServiceNotificationActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostServiceNotificationActionResponse) ProtoMessage() {}

func (x *HostServiceNotificationActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostServiceNotificationActionResponse.ProtoReflect.Descriptor instead.
func (*HostServiceNotificationActionResponse) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{29}
}

type HostServiceAudioSinkVolumeAdjustRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Direction v11.Direction `protobuf:"varint,2,opt,name=direction,proto3,enum=hyprpanel.event.v1.Direction" json:"direction,omitempty"`
}

func (x *HostServiceAudioSinkVolumeAdjustRequest) Reset() {
	*x = HostServiceAudioSinkVolumeAdjustRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostServiceAudioSinkVolumeAdjustRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostServiceAudioSinkVolumeAdjustRequest) ProtoMessage() {}

func (x *HostServiceAudioSinkVolumeAdjustRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostServiceAudioSinkVolumeAdjustRequest.ProtoReflect.Descriptor instead.
func (*HostServiceAudioSinkVolumeAdjustRequest) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{30}
}

func (x *HostServiceAudioSinkVolumeAdjustRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HostServiceAudioSinkVolumeAdjustRequest) GetDirection() v11.Direction {
	if x != nil {
		return x.Direction
	}
	return v11.Direction(0)
}

type HostServiceAudioSinkVolumeAdjustResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HostServiceAudioSinkVolumeAdjustResponse) Reset() {
	*x = HostServiceAudioSinkVolumeAdjustResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostServiceAudioSinkVolumeAdjustResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostServiceAudioSinkVolumeAdjustResponse) ProtoMessage() {}

func (x *HostServiceAudioSinkVolumeAdjustResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostServiceAudioSinkVolumeAdjustResponse.ProtoReflect.Descriptor instead.
func (*HostServiceAudioSinkVolumeAdjustResponse) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{31}
}

type HostServiceAudioSinkMuteToggleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *HostServiceAudioSinkMuteToggleRequest) Reset() {
	*x = HostServiceAudioSinkMuteToggleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostServiceAudioSinkMuteToggleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostServiceAudioSinkMuteToggleRequest) ProtoMessage() {}

func (x *HostServiceAudioSinkMuteToggleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostServiceAudioSinkMuteToggleRequest.ProtoReflect.Descriptor instead.
func (*HostServiceAudioSinkMuteToggleRequest) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{32}
}

func (x *HostServiceAudioSinkMuteToggleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type HostServiceAudioSinkMuteToggleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HostServiceAudioSinkMuteToggleResponse) Reset() {
	*x = HostServiceAudioSinkMuteToggleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostServiceAudioSinkMuteToggleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostServiceAudioSinkMuteToggleResponse) ProtoMessage() {}

func (x *HostServiceAudioSinkMuteToggleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostServiceAudioSinkMuteToggleResponse.ProtoReflect.Descriptor instead.
func (*HostServiceAudioSinkMuteToggleResponse) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{33}
}

type HostServiceAudioSourceVolumeAdjustRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Direction v11.Direction `protobuf:"varint,2,opt,name=direction,proto3,enum=hyprpanel.event.v1.Direction" json:"direction,omitempty"`
}

func (x *HostServiceAudioSourceVolumeAdjustRequest) Reset() {
	*x = HostServiceAudioSourceVolumeAdjustRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostServiceAudioSourceVolumeAdjustRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostServiceAudioSourceVolumeAdjustRequest) ProtoMessage() {}

func (x *HostServiceAudioSourceVolumeAdjustRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostServiceAudioSourceVolumeAdjustRequest.ProtoReflect.Descriptor instead.
func (*HostServiceAudioSourceVolumeAdjustRequest) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{34}
}

func (x *HostServiceAudioSourceVolumeAdjustRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HostServiceAudioSourceVolumeAdjustRequest) GetDirection() v11.Direction {
	if x != nil {
		return x.Direction
	}
	return v11.Direction(0)
}

type HostServiceAudioSourceVolumeAdjustResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HostServiceAudioSourceVolumeAdjustResponse) Reset() {
	*x = HostServiceAudioSourceVolumeAdjustResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostServiceAudioSourceVolumeAdjustResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostServiceAudioSourceVolumeAdjustResponse) ProtoMessage() {}

func (x *HostServiceAudioSourceVolumeAdjustResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostServiceAudioSourceVolumeAdjustResponse.ProtoReflect.Descriptor instead.
func (*HostServiceAudioSourceVolumeAdjustResponse) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{35}
}

type HostServiceAudioSourceMuteToggleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *HostServiceAudioSourceMuteToggleRequest) Reset() {
	*x = HostServiceAudioSourceMuteToggleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostServiceAudioSourceMuteToggleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostServiceAudioSourceMuteToggleRequest) ProtoMessage() {}

func (x *HostServiceAudioSourceMuteToggleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostServiceAudioSourceMuteToggleRequest.ProtoReflect.Descriptor instead.
func (*HostServiceAudioSourceMuteToggleRequest) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{36}
}

func (x *HostServiceAudioSourceMuteToggleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type HostServiceAudioSourceMuteToggleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HostServiceAudioSourceMuteToggleResponse) Reset() {
	*x = HostServiceAudioSourceMuteToggleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostServiceAudioSourceMuteToggleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostServiceAudioSourceMuteToggleResponse) ProtoMessage() {}

func (x *HostServiceAudioSourceMuteToggleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostServiceAudioSourceMuteToggleResponse.ProtoReflect.Descriptor instead.
func (*HostServiceAudioSourceMuteToggleResponse) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{37}
}

type HostServiceBrightnessAdjustRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DevName   string        `protobuf:"bytes,1,opt,name=dev_name,json=devName,proto3" json:"dev_name,omitempty"`
	Direction v11.Direction `protobuf:"varint,2,opt,name=direction,proto3,enum=hyprpanel.event.v1.Direction" json:"direction,omitempty"`
}

func (x *HostServiceBrightnessAdjustRequest) Reset() {
	*x = HostServiceBrightnessAdjustRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostServiceBrightnessAdjustRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostServiceBrightnessAdjustRequest) ProtoMessage() {}

func (x *HostServiceBrightnessAdjustRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostServiceBrightnessAdjustRequest.ProtoReflect.Descriptor instead.
func (*HostServiceBrightnessAdjustRequest) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{38}
}

func (x *HostServiceBrightnessAdjustRequest) GetDevName() string {
	if x != nil {
		return x.DevName
	}
	return ""
}

func (x *HostServiceBrightnessAdjustRequest) GetDirection() v11.Direction {
	if x != nil {
		return x.Direction
	}
	return v11.Direction(0)
}

type HostServiceBrightnessAdjustResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HostServiceBrightnessAdjustResponse) Reset() {
	*x = HostServiceBrightnessAdjustResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostServiceBrightnessAdjustResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostServiceBrightnessAdjustResponse) ProtoMessage() {}

func (x *HostServiceBrightnessAdjustResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostServiceBrightnessAdjustResponse.ProtoReflect.Descriptor instead.
func (*HostServiceBrightnessAdjustResponse) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{39}
}

type HostServiceCaptureFrameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address uint64 `protobuf:"varint,1,opt,name=address,proto3" json:"address,omitempty"`
	Width   int32  `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	Height  int32  `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *HostServiceCaptureFrameRequest) Reset() {
	*x = HostServiceCaptureFrameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostServiceCaptureFrameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostServiceCaptureFrameRequest) ProtoMessage() {}

func (x *HostServiceCaptureFrameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostServiceCaptureFrameRequest.ProtoReflect.Descriptor instead.
func (*HostServiceCaptureFrameRequest) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{40}
}

func (x *HostServiceCaptureFrameRequest) GetAddress() uint64 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *HostServiceCaptureFrameRequest) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *HostServiceCaptureFrameRequest) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type HostServiceCaptureFrameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image *ImageNRGBA `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *HostServiceCaptureFrameResponse) Reset() {
	*x = HostServiceCaptureFrameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostServiceCaptureFrameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostServiceCaptureFrameResponse) ProtoMessage() {}

func (x *HostServiceCaptureFrameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostServiceCaptureFrameResponse.ProtoReflect.Descriptor instead.
func (*HostServiceCaptureFrameResponse) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{41}
}

func (x *HostServiceCaptureFrameResponse) GetImage() *ImageNRGBA {
	if x != nil {
		return x.Image
	}
	return nil
}

type AppInfo_Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Icon    string   `protobuf:"bytes,2,opt,name=icon,proto3" json:"icon,omitempty"`
	Exec    []string `protobuf:"bytes,3,rep,name=exec,proto3" json:"exec,omitempty"`
	RawExec string   `protobuf:"bytes,4,opt,name=raw_exec,json=rawExec,proto3" json:"raw_exec,omitempty"`
}

func (x *AppInfo_Action) Reset() {
	*x = AppInfo_Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppInfo_Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppInfo_Action) ProtoMessage() {}

func (x *AppInfo_Action) ProtoReflect() protoreflect.Message {
	mi := &file_hyprpanel_v1_hyprpanel_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppInfo_Action.ProtoReflect.Descriptor instead.
func (*AppInfo_Action) Descriptor() ([]byte, []int) {
	return file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP(), []int{1, 0}
}

func (x *AppInfo_Action) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppInfo_Action) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *AppInfo_Action) GetExec() []string {
	if x != nil {
		return x.Exec
	}
	return nil
}

func (x *AppInfo_Action) GetRawExec() string {
	if x != nil {
		return x.RawExec
	}
	return ""
}

var File_hyprpanel_v1_hyprpanel_proto protoreflect.FileDescriptor

var file_hyprpanel_v1_hyprpanel_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x68,
	0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c,
	0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e,
	0x65, 0x6c, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x68, 0x79, 0x70, 0x72, 0x70,
	0x61, 0x6e, 0x65, 0x6c, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6a, 0x0a, 0x0a, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x4e, 0x52, 0x47, 0x42, 0x41, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x69, 0x78, 0x65, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x91, 0x03, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x5f, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x72, 0x79, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x74, 0x72, 0x79, 0x45, 0x78, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x78, 0x65, 0x63, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x65, 0x78, 0x65, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x72,
	0x61, 0x77, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x61, 0x77, 0x45, 0x78, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x75, 0x70, 0x5f, 0x77, 0x6d, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x57, 0x6d, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c,
	0x12, 0x36, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x5f, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x78,
	0x65, 0x63, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x65, 0x78, 0x65, 0x63, 0x12, 0x19,
	0x0a, 0x08, 0x72, 0x61, 0x77, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x72, 0x61, 0x77, 0x45, 0x78, 0x65, 0x63, 0x22, 0xcd, 0x01, 0x0a, 0x17, 0x50, 0x61,
	0x6e, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x09, 0x6c, 0x6f, 0x67,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x68,
	0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x08, 0x6c, 0x6f, 0x67,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x32, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65,
	0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x6e, 0x65,
	0x6c, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x79,
	0x6c, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x73,
	0x74, 0x79, 0x6c, 0x65, 0x73, 0x68, 0x65, 0x65, 0x74, 0x22, 0x1a, 0x0a, 0x18, 0x50, 0x61, 0x6e,
	0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4c, 0x0a, 0x19, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x22, 0x1c, 0x0a, 0x1a, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x36, 0x0a, 0x24, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x27, 0x0a, 0x25, 0x50, 0x61, 0x6e,
	0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1a, 0x0a, 0x18, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1b,
	0x0a, 0x19, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4e, 0x0a, 0x16, 0x48,
	0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x78, 0x65, 0x63, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x19, 0x0a, 0x17, 0x48,
	0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x78, 0x65, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x0a, 0x21, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x22, 0x56, 0x0a, 0x22, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x46, 0x69, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x68, 0x79, 0x70, 0x72,
	0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x07, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5a, 0x0a, 0x21, 0x48, 0x6f, 0x73,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x79, 0x73, 0x74, 0x72, 0x61, 0x79, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x62, 0x75, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x62, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x01, 0x79, 0x22, 0x24, 0x0a, 0x22, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x79, 0x73, 0x74, 0x72, 0x61, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x63, 0x0a, 0x2a, 0x48,
	0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x79, 0x73, 0x74, 0x72, 0x61,
	0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x75, 0x73,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x75, 0x73,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x79,
	0x22, 0x2d, 0x0a, 0x2b, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53,
	0x79, 0x73, 0x74, 0x72, 0x61, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x9c, 0x01, 0x0a, 0x1f, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53,
	0x79, 0x73, 0x74, 0x72, 0x61, 0x79, 0x53, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x75, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x64,
	0x65, 0x6c, 0x74, 0x61, 0x12, 0x48, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x68, 0x79, 0x70, 0x72,
	0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x72, 0x61, 0x79,
	0x53, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x4f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x22,
	0x0a, 0x20, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x79, 0x73,
	0x74, 0x72, 0x61, 0x79, 0x53, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x65, 0x0a, 0x2c, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x79, 0x73, 0x74, 0x72, 0x61, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x75, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0c, 0x0a,
	0x01, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x79, 0x22, 0x2f, 0x0a, 0x2d, 0x48, 0x6f, 0x73,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x79, 0x73, 0x74, 0x72, 0x61, 0x79, 0x4d,
	0x65, 0x6e, 0x75, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x67, 0x0a, 0x28, 0x48, 0x6f,
	0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x79, 0x73, 0x74, 0x72, 0x61, 0x79,
	0x4d, 0x65, 0x6e, 0x75, 0x41, 0x62, 0x6f, 0x75, 0x74, 0x54, 0x6f, 0x53, 0x68, 0x6f, 0x77, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x75, 0x73, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x75, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x22, 0x2b, 0x0a, 0x29, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x53, 0x79, 0x73, 0x74, 0x72, 0x61, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x62, 0x6f,
	0x75, 0x74, 0x54, 0x6f, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xd2, 0x01, 0x0a, 0x22, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x53, 0x79, 0x73, 0x74, 0x72, 0x61, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x75, 0x73, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x75, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x39, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x72, 0x61, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x25, 0x0a, 0x23, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x79, 0x73, 0x74, 0x72, 0x61, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x76, 0x0a, 0x24,
	0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x3e, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x22, 0x27, 0x0a, 0x25, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x55, 0x0a,
	0x24, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4b, 0x65, 0x79, 0x22, 0x27, 0x0a, 0x25, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x76, 0x0a,
	0x27, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x53, 0x69, 0x6e, 0x6b, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x41, 0x64, 0x6a, 0x75, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x68, 0x79,
	0x70, 0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2a, 0x0a, 0x28, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x69, 0x6e, 0x6b, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x37, 0x0a, 0x25, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x69, 0x6e, 0x6b, 0x4d, 0x75, 0x74, 0x65, 0x54, 0x6f, 0x67,
	0x67, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x28, 0x0a, 0x26, 0x48, 0x6f,
	0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x69,
	0x6e, 0x6b, 0x4d, 0x75, 0x74, 0x65, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x78, 0x0a, 0x29, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x3b, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2c,
	0x0a, 0x2a, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x75, 0x64,
	0x69, 0x6f, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x41, 0x64,
	0x6a, 0x75, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x0a, 0x27,
	0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x75, 0x64, 0x69, 0x6f,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x75, 0x74, 0x65, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x28, 0x48, 0x6f, 0x73, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x4d, 0x75, 0x74, 0x65, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x7c, 0x0a, 0x22, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x64, 0x6a, 0x75,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x65, 0x76,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x76,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61,
	0x6e, 0x65, 0x6c, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x25, 0x0a, 0x23, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x68, 0x0a, 0x1e, 0x48, 0x6f, 0x73, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x22, 0x51, 0x0a, 0x1f, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x52, 0x47, 0x42, 0x41, 0x52, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x2a, 0x9a, 0x01, 0x0a, 0x18, 0x53, 0x79, 0x73, 0x74, 0x72, 0x61,
	0x79, 0x53, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x4f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x26, 0x53, 0x59, 0x53, 0x54, 0x52, 0x41, 0x59, 0x5f, 0x53, 0x43,
	0x52, 0x4f, 0x4c, 0x4c, 0x5f, 0x4f, 0x52, 0x49, 0x45, 0x4e, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x27,
	0x0a, 0x23, 0x53, 0x59, 0x53, 0x54, 0x52, 0x41, 0x59, 0x5f, 0x53, 0x43, 0x52, 0x4f, 0x4c, 0x4c,
	0x5f, 0x4f, 0x52, 0x49, 0x45, 0x4e, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x56, 0x45, 0x52,
	0x54, 0x49, 0x43, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x29, 0x0a, 0x25, 0x53, 0x59, 0x53, 0x54, 0x52,
	0x41, 0x59, 0x5f, 0x53, 0x43, 0x52, 0x4f, 0x4c, 0x4c, 0x5f, 0x4f, 0x52, 0x49, 0x45, 0x4e, 0x54,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x4f, 0x4e, 0x54, 0x41, 0x4c,
	0x10, 0x02, 0x2a, 0x76, 0x0a, 0x10, 0x53, 0x79, 0x73, 0x74, 0x72, 0x61, 0x79, 0x4d, 0x65, 0x6e,
	0x75, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x1e, 0x53, 0x59, 0x53, 0x54, 0x52, 0x41,
	0x59, 0x5f, 0x4d, 0x45, 0x4e, 0x55, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x59,
	0x53, 0x54, 0x52, 0x41, 0x59, 0x5f, 0x4d, 0x45, 0x4e, 0x55, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54,
	0x5f, 0x43, 0x4c, 0x49, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x59,
	0x53, 0x54, 0x52, 0x41, 0x59, 0x5f, 0x4d, 0x45, 0x4e, 0x55, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54,
	0x5f, 0x48, 0x4f, 0x56, 0x45, 0x52, 0x45, 0x44, 0x10, 0x02, 0x2a, 0xbf, 0x01, 0x0a, 0x18, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x26, 0x4e, 0x4f, 0x54, 0x49, 0x46,
	0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x5f, 0x52,
	0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x26, 0x0a, 0x22, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f,
	0x4e, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x28, 0x0a, 0x24, 0x4e,
	0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4c, 0x4f, 0x53,
	0x45, 0x44, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x44, 0x49, 0x53, 0x4d, 0x49, 0x53,
	0x53, 0x45, 0x44, 0x10, 0x02, 0x12, 0x25, 0x0a, 0x21, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x5f, 0x52, 0x45, 0x41,
	0x53, 0x4f, 0x4e, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x10, 0x03, 0x32, 0x9c, 0x02, 0x0a,
	0x0c, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a,
	0x04, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x25, 0x2e, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x68,
	0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x6e, 0x65,
	0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x06, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x27,
	0x2e, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x6e, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61,
	0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x58, 0x0a, 0x05, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x26, 0x2e, 0x68, 0x79, 0x70,
	0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xf5, 0x0f, 0x0a, 0x0b,
	0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x53, 0x0a, 0x04, 0x45,
	0x78, 0x65, 0x63, 0x12, 0x24, 0x2e, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x78,
	0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x68, 0x79, 0x70, 0x72,
	0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x45, 0x78, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x74, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x2e, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x69,
	0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46,
	0x69, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x0f, 0x53, 0x79, 0x73, 0x74, 0x72, 0x61,
	0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x2f, 0x2e, 0x68, 0x79, 0x70, 0x72,
	0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x79, 0x73, 0x74, 0x72, 0x61, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x68, 0x79, 0x70,
	0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x79, 0x73, 0x74, 0x72, 0x61, 0x79, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8f, 0x01, 0x0a,
	0x18, 0x53, 0x79, 0x73, 0x74, 0x72, 0x61, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72,
	0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x38, 0x2e, 0x68, 0x79, 0x70, 0x72,
	0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x79, 0x73, 0x74, 0x72, 0x61, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x61, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x79,
	0x73, 0x74, 0x72, 0x61, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e,
	0x0a, 0x0d, 0x53, 0x79, 0x73, 0x74, 0x72, 0x61, 0x79, 0x53, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x12,
	0x2d, 0x2e, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x48,
	0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x79, 0x73, 0x74, 0x72, 0x61,
	0x79, 0x53, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e,
	0x2e, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f,
	0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x79, 0x73, 0x74, 0x72, 0x61, 0x79,
	0x53, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x95,
	0x01, 0x0a, 0x1a, 0x53, 0x79, 0x73, 0x74, 0x72, 0x61, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x2e,
	0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x79, 0x73, 0x74, 0x72, 0x61, 0x79, 0x4d,
	0x65, 0x6e, 0x75, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x68, 0x79, 0x70, 0x72,
	0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x79, 0x73, 0x74, 0x72, 0x61, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x16, 0x53, 0x79, 0x73, 0x74, 0x72,
	0x61, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x62, 0x6f, 0x75, 0x74, 0x54, 0x6f, 0x53, 0x68, 0x6f,
	0x77, 0x12, 0x36, 0x2e, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x79, 0x73, 0x74,
	0x72, 0x61, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x62, 0x6f, 0x75, 0x74, 0x54, 0x6f, 0x53, 0x68,
	0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x68, 0x79, 0x70, 0x72,
	0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x79, 0x73, 0x74, 0x72, 0x61, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x41,
	0x62, 0x6f, 0x75, 0x74, 0x54, 0x6f, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x77, 0x0a, 0x10, 0x53, 0x79, 0x73, 0x74, 0x72, 0x61, 0x79, 0x4d, 0x65, 0x6e,
	0x75, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x2e, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x79, 0x73, 0x74, 0x72, 0x61, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x68, 0x79, 0x70, 0x72, 0x70,
	0x61, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x79, 0x73, 0x74, 0x72, 0x61, 0x79, 0x4d, 0x65, 0x6e, 0x75, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7d, 0x0a, 0x12, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x64, 0x12, 0x32, 0x2e, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7d, 0x0a, 0x12, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x32, 0x2e, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x15, 0x41, 0x75,
	0x64, 0x69, 0x6f, 0x53, 0x69, 0x6e, 0x6b, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x41, 0x64, 0x6a,
	0x75, 0x73, 0x74, 0x12, 0x35, 0x2e, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x75,
	0x64, 0x69, 0x6f, 0x53, 0x69, 0x6e, 0x6b, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x41, 0x64, 0x6a,
	0x75, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x68, 0x79, 0x70,
	0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x69, 0x6e, 0x6b, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x13, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x69, 0x6e, 0x6b,
	0x4d, 0x75, 0x74, 0x65, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x12, 0x33, 0x2e, 0x68, 0x79, 0x70,
	0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x69, 0x6e, 0x6b, 0x4d, 0x75,
	0x74, 0x65, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x34, 0x2e, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x48,
	0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53,
	0x69, 0x6e, 0x6b, 0x4d, 0x75, 0x74, 0x65, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8c, 0x01, 0x0a, 0x17, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x41, 0x64, 0x6a, 0x75, 0x73,
	0x74, 0x12, 0x37, 0x2e, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x41, 0x64, 0x6a,
	0x75, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x68, 0x79, 0x70,
	0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x15, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4d, 0x75, 0x74, 0x65, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x12, 0x35,
	0x2e, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f,
	0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4d, 0x75, 0x74, 0x65, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x75, 0x74, 0x65, 0x54,
	0x6f, 0x67, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a,
	0x10, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x64, 0x6a, 0x75, 0x73,
	0x74, 0x12, 0x30, 0x2e, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x72, 0x69, 0x67,
	0x68, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x72,
	0x69, 0x67, 0x68, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x0c, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72,
	0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x2e, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0xac, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x79, 0x70, 0x72,
	0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x42, 0x0e, 0x48, 0x79, 0x70, 0x72, 0x70, 0x61,
	0x6e, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x64, 0x66, 0x2f, 0x68, 0x79, 0x70, 0x72, 0x70,
	0x61, 0x6e, 0x65, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x68, 0x79, 0x70, 0x72, 0x70,
	0x61, 0x6e, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x3b, 0x68, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65,
	0x6c, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x48, 0x58, 0x58, 0xaa, 0x02, 0x0c, 0x48, 0x79, 0x70, 0x72,
	0x70, 0x61, 0x6e, 0x65, 0x6c, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0c, 0x48, 0x79, 0x70, 0x72, 0x70,
	0x61, 0x6e, 0x65, 0x6c, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x18, 0x48, 0x79, 0x70, 0x72, 0x70, 0x61,
	0x6e, 0x65, 0x6c, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x0d, 0x48, 0x79, 0x70, 0x72, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x3a, 0x3a,
	0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hyprpanel_v1_hyprpanel_proto_rawDescOnce sync.Once
	file_hyprpanel_v1_hyprpanel_proto_rawDescData = file_hyprpanel_v1_hyprpanel_proto_rawDesc
)

func file_hyprpanel_v1_hyprpanel_proto_rawDescGZIP() []byte {
	file_hyprpanel_v1_hyprpanel_proto_rawDescOnce.Do(func() {
		file_hyprpanel_v1_hyprpanel_proto_rawDescData = protoimpl.X.CompressGZIP(file_hyprpanel_v1_hyprpanel_proto_rawDescData)
	})
	return file_hyprpanel_v1_hyprpanel_proto_rawDescData
}

var file_hyprpanel_v1_hyprpanel_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_hyprpanel_v1_hyprpanel_proto_msgTypes = make([]protoimpl.MessageInfo, 43)
var file_hyprpanel_v1_hyprpanel_proto_goTypes = []interface{}{
	(SystrayScrollOrientation)(0),                         // 0: hyprpanel.v1.SystrayScrollOrientation
	(SystrayMenuEvent)(0),                                 // 1: hyprpanel.v1.SystrayMenuEvent
	(NotificationClosedReason)(0),                         // 2: hyprpanel.v1.NotificationClosedReason
	(*ImageNRGBA)(nil),                                    // 3: hyprpanel.v1.ImageNRGBA
	(*AppInfo)(nil),                                       // 4: hyprpanel.v1.AppInfo
	(*PanelServiceInitRequest)(nil),                       // 5: hyprpanel.v1.PanelServiceInitRequest
	(*PanelServiceInitResponse)(nil),                      // 6: hyprpanel.v1.PanelServiceInitResponse
	(*PanelServiceNotifyRequest)(nil),                     // 7: hyprpanel.v1.PanelServiceNotifyRequest
	(*PanelServiceNotifyResponse)(nil),                    // 8: hyprpanel.v1.PanelServiceNotifyResponse
	(*PanelServiceNotificationCloseRequest)(nil),          // 9: hyprpanel.v1.PanelServiceNotificationCloseRequest
	(*PanelServiceNotificationCloseResponse)(nil),         // 10: hyprpanel.v1.PanelServiceNotificationCloseResponse
	(*PanelServiceCloseRequest)(nil),                      // 11: hyprpanel.v1.PanelServiceCloseRequest
	(*PanelServiceCloseResponse)(nil),                     // 12: hyprpanel.v1.PanelServiceCloseResponse
	(*HostServiceExecRequest)(nil),                        // 13: hyprpanel.v1.HostServiceExecRequest
	(*HostServiceExecResponse)(nil),                       // 14: hyprpanel.v1.HostServiceExecResponse
	(*HostServiceFindApplicationRequest)(nil),             // 15: hyprpanel.v1.HostServiceFindApplicationRequest
	(*HostServiceFindApplicationResponse)(nil),            // 16: hyprpanel.v1.HostServiceFindApplicationResponse
	(*HostServiceSystrayActivateRequest)(nil),             // 17: hyprpanel.v1.HostServiceSystrayActivateRequest
	(*HostServiceSystrayActivateResponse)(nil),            // 18: hyprpanel.v1.HostServiceSystrayActivateResponse
	(*HostServiceSystraySecondaryActivateRequest)(nil),    // 19: hyprpanel.v1.HostServiceSystraySecondaryActivateRequest
	(*HostServiceSystraySecondaryActivateResponse)(nil),   // 20: hyprpanel.v1.HostServiceSystraySecondaryActivateResponse
	(*HostServiceSystrayScrollRequest)(nil),               // 21: hyprpanel.v1.HostServiceSystrayScrollRequest
	(*HostServiceSystrayScrollResponse)(nil),              // 22: hyprpanel.v1.HostServiceSystrayScrollResponse
	(*HostServiceSystrayMenuContextActivateRequest)(nil),  // 23: hyprpanel.v1.HostServiceSystrayMenuContextActivateRequest
	(*HostServiceSystrayMenuContextActivateResponse)(nil), // 24: hyprpanel.v1.HostServiceSystrayMenuContextActivateResponse
	(*HostServiceSystrayMenuAboutToShowRequest)(nil),      // 25: hyprpanel.v1.HostServiceSystrayMenuAboutToShowRequest
	(*HostServiceSystrayMenuAboutToShowResponse)(nil),     // 26: hyprpanel.v1.HostServiceSystrayMenuAboutToShowResponse
	(*HostServiceSystrayMenuEventRequest)(nil),            // 27: hyprpanel.v1.HostServiceSystrayMenuEventRequest
	(*HostServiceSystrayMenuEventResponse)(nil),           // 28: hyprpanel.v1.HostServiceSystrayMenuEventResponse
	(*HostServiceNotificationClosedRequest)(nil),          // 29: hyprpanel.v1.HostServiceNotificationClosedRequest
	(*HostServiceNotificationClosedResponse)(nil),         // 30: hyprpanel.v1.HostServiceNotificationClosedResponse
	(*HostServiceNotificationActionRequest)(nil),          // 31: hyprpanel.v1.HostServiceNotificationActionRequest
	(*HostServiceNotificationActionResponse)(nil),         // 32: hyprpanel.v1.HostServiceNotificationActionResponse
	(*HostServiceAudioSinkVolumeAdjustRequest)(nil),       // 33: hyprpanel.v1.HostServiceAudioSinkVolumeAdjustRequest
	(*HostServiceAudioSinkVolumeAdjustResponse)(nil),      // 34: hyprpanel.v1.HostServiceAudioSinkVolumeAdjustResponse
	(*HostServiceAudioSinkMuteToggleRequest)(nil),         // 35: hyprpanel.v1.HostServiceAudioSinkMuteToggleRequest
	(*HostServiceAudioSinkMuteToggleResponse)(nil),        // 36: hyprpanel.v1.HostServiceAudioSinkMuteToggleResponse
	(*HostServiceAudioSourceVolumeAdjustRequest)(nil),     // 37: hyprpanel.v1.HostServiceAudioSourceVolumeAdjustRequest
	(*HostServiceAudioSourceVolumeAdjustResponse)(nil),    // 38: hyprpanel.v1.HostServiceAudioSourceVolumeAdjustResponse
	(*HostServiceAudioSourceMuteToggleRequest)(nil),       // 39: hyprpanel.v1.HostServiceAudioSourceMuteToggleRequest
	(*HostServiceAudioSourceMuteToggleResponse)(nil),      // 40: hyprpanel.v1.HostServiceAudioSourceMuteToggleResponse
	(*HostServiceBrightnessAdjustRequest)(nil),            // 41: hyprpanel.v1.HostServiceBrightnessAdjustRequest
	(*HostServiceBrightnessAdjustResponse)(nil),           // 42: hyprpanel.v1.HostServiceBrightnessAdjustResponse
	(*HostServiceCaptureFrameRequest)(nil),                // 43: hyprpanel.v1.HostServiceCaptureFrameRequest
	(*HostServiceCaptureFrameResponse)(nil),               // 44: hyprpanel.v1.HostServiceCaptureFrameResponse
	(*AppInfo_Action)(nil),                                // 45: hyprpanel.v1.AppInfo.Action
	(v1.LogLevel)(0),                                      // 46: hyprpanel.config.v1.LogLevel
	(*v1.Panel)(nil),                                      // 47: hyprpanel.config.v1.Panel
	(*v11.Event)(nil),                                     // 48: hyprpanel.event.v1.Event
	(*anypb.Any)(nil),                                     // 49: google.protobuf.Any
	(v11.Direction)(0),                                    // 50: hyprpanel.event.v1.Direction
}
var file_hyprpanel_v1_hyprpanel_proto_depIdxs = []int32{
	45, // 0: hyprpanel.v1.AppInfo.actions:type_name -> hyprpanel.v1.AppInfo.Action
	46, // 1: hyprpanel.v1.PanelServiceInitRequest.log_level:type_name -> hyprpanel.config.v1.LogLevel
	47, // 2: hyprpanel.v1.PanelServiceInitRequest.config:type_name -> hyprpanel.config.v1.Panel
	48, // 3: hyprpanel.v1.PanelServiceNotifyRequest.event:type_name -> hyprpanel.event.v1.Event
	45, // 4: hyprpanel.v1.HostServiceExecRequest.action:type_name -> hyprpanel.v1.AppInfo.Action
	4,  // 5: hyprpanel.v1.HostServiceFindApplicationResponse.app_info:type_name -> hyprpanel.v1.AppInfo
	0,  // 6: hyprpanel.v1.HostServiceSystrayScrollRequest.orientation:type_name -> hyprpanel.v1.SystrayScrollOrientation
	1,  // 7: hyprpanel.v1.HostServiceSystrayMenuEventRequest.event_id:type_name -> hyprpanel.v1.SystrayMenuEvent
	49, // 8: hyprpanel.v1.HostServiceSystrayMenuEventRequest.data:type_name -> google.protobuf.Any
	2,  // 9: hyprpanel.v1.HostServiceNotificationClosedRequest.reason:type_name -> hyprpanel.v1.NotificationClosedReason
	50, // 10: hyprpanel.v1.HostServiceAudioSinkVolumeAdjustRequest.direction:type_name -> hyprpanel.event.v1.Direction
	50, // 11: hyprpanel.v1.HostServiceAudioSourceVolumeAdjustRequest.direction:type_name -> hyprpanel.event.v1.Direction
	50, // 12: hyprpanel.v1.HostServiceBrightnessAdjustRequest.direction:type_name -> hyprpanel.event.v1.Direction
	3,  // 13: hyprpanel.v1.HostServiceCaptureFrameResponse.image:type_name -> hyprpanel.v1.ImageNRGBA
	5,  // 14: hyprpanel.v1.PanelService.Init:input_type -> hyprpanel.v1.PanelServiceInitRequest
	7,  // 15: hyprpanel.v1.PanelService.Notify:input_type -> hyprpanel.v1.PanelServiceNotifyRequest
	11, // 16: hyprpanel.v1.PanelService.Close:input_type -> hyprpanel.v1.PanelServiceCloseRequest
	13, // 17: hyprpanel.v1.HostService.Exec:input_type -> hyprpanel.v1.HostServiceExecRequest
	15, // 18: hyprpanel.v1.HostService.FindApplication:input_type -> hyprpanel.v1.HostServiceFindApplicationRequest
	17, // 19: hyprpanel.v1.HostService.SystrayActivate:input_type -> hyprpanel.v1.HostServiceSystrayActivateRequest
	19, // 20: hyprpanel.v1.HostService.SystraySecondaryActivate:input_type -> hyprpanel.v1.HostServiceSystraySecondaryActivateRequest
	21, // 21: hyprpanel.v1.HostService.SystrayScroll:input_type -> hyprpanel.v1.HostServiceSystrayScrollRequest
	23, // 22: hyprpanel.v1.HostService.SystrayMenuContextActivate:input_type -> hyprpanel.v1.HostServiceSystrayMenuContextActivateRequest
	25, // 23: hyprpanel.v1.HostService.SystrayMenuAboutToShow:input_type -> hyprpanel.v1.HostServiceSystrayMenuAboutToShowRequest
	27, // 24: hyprpanel.v1.HostService.SystrayMenuEvent:input_type -> hyprpanel.v1.HostServiceSystrayMenuEventRequest
	29, // 25: hyprpanel.v1.HostService.NotificationClosed:input_type -> hyprpanel.v1.HostServiceNotificationClosedRequest
	31, // 26: hyprpanel.v1.HostService.NotificationAction:input_type -> hyprpanel.v1.HostServiceNotificationActionRequest
	33, // 27: hyprpanel.v1.HostService.AudioSinkVolumeAdjust:input_type -> hyprpanel.v1.HostServiceAudioSinkVolumeAdjustRequest
	35, // 28: hyprpanel.v1.HostService.AudioSinkMuteToggle:input_type -> hyprpanel.v1.HostServiceAudioSinkMuteToggleRequest
	37, // 29: hyprpanel.v1.HostService.AudioSourceVolumeAdjust:input_type -> hyprpanel.v1.HostServiceAudioSourceVolumeAdjustRequest
	39, // 30: hyprpanel.v1.HostService.AudioSourceMuteToggle:input_type -> hyprpanel.v1.HostServiceAudioSourceMuteToggleRequest
	41, // 31: hyprpanel.v1.HostService.BrightnessAdjust:input_type -> hyprpanel.v1.HostServiceBrightnessAdjustRequest
	43, // 32: hyprpanel.v1.HostService.CaptureFrame:input_type -> hyprpanel.v1.HostServiceCaptureFrameRequest
	6,  // 33: hyprpanel.v1.PanelService.Init:output_type -> hyprpanel.v1.PanelServiceInitResponse
	8,  // 34: hyprpanel.v1.PanelService.Notify:output_type -> hyprpanel.v1.PanelServiceNotifyResponse
	12, // 35: hyprpanel.v1.PanelService.Close:output_type -> hyprpanel.v1.PanelServiceCloseResponse
	14, // 36: hyprpanel.v1.HostService.Exec:output_type -> hyprpanel.v1.HostServiceExecResponse
	16, // 37: hyprpanel.v1.HostService.FindApplication:output_type -> hyprpanel.v1.HostServiceFindApplicationResponse
	18, // 38: hyprpanel.v1.HostService.SystrayActivate:output_type -> hyprpanel.v1.HostServiceSystrayActivateResponse
	20, // 39: hyprpanel.v1.HostService.SystraySecondaryActivate:output_type -> hyprpanel.v1.HostServiceSystraySecondaryActivateResponse
	22, // 40: hyprpanel.v1.HostService.SystrayScroll:output_type -> hyprpanel.v1.HostServiceSystrayScrollResponse
	24, // 41: hyprpanel.v1.HostService.SystrayMenuContextActivate:output_type -> hyprpanel.v1.HostServiceSystrayMenuContextActivateResponse
	26, // 42: hyprpanel.v1.HostService.SystrayMenuAboutToShow:output_type -> hyprpanel.v1.HostServiceSystrayMenuAboutToShowResponse
	28, // 43: hyprpanel.v1.HostService.SystrayMenuEvent:output_type -> hyprpanel.v1.HostServiceSystrayMenuEventResponse
	30, // 44: hyprpanel.v1.HostService.NotificationClosed:output_type -> hyprpanel.v1.HostServiceNotificationClosedResponse
	32, // 45: hyprpanel.v1.HostService.NotificationAction:output_type -> hyprpanel.v1.HostServiceNotificationActionResponse
	34, // 46: hyprpanel.v1.HostService.AudioSinkVolumeAdjust:output_type -> hyprpanel.v1.HostServiceAudioSinkVolumeAdjustResponse
	36, // 47: hyprpanel.v1.HostService.AudioSinkMuteToggle:output_type -> hyprpanel.v1.HostServiceAudioSinkMuteToggleResponse
	38, // 48: hyprpanel.v1.HostService.AudioSourceVolumeAdjust:output_type -> hyprpanel.v1.HostServiceAudioSourceVolumeAdjustResponse
	40, // 49: hyprpanel.v1.HostService.AudioSourceMuteToggle:output_type -> hyprpanel.v1.HostServiceAudioSourceMuteToggleResponse
	42, // 50: hyprpanel.v1.HostService.BrightnessAdjust:output_type -> hyprpanel.v1.HostServiceBrightnessAdjustResponse
	44, // 51: hyprpanel.v1.HostService.CaptureFrame:output_type -> hyprpanel.v1.HostServiceCaptureFrameResponse
	33, // [33:52] is the sub-list for method output_type
	14, // [14:33] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_hyprpanel_v1_hyprpanel_proto_init() }
func file_hyprpanel_v1_hyprpanel_proto_init() {
	if File_hyprpanel_v1_hyprpanel_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageNRGBA); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PanelServiceInitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PanelServiceInitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PanelServiceNotifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PanelServiceNotifyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PanelServiceNotificationCloseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PanelServiceNotificationCloseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PanelServiceCloseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PanelServiceCloseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostServiceExecRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostServiceExecResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostServiceFindApplicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostServiceFindApplicationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostServiceSystrayActivateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostServiceSystrayActivateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostServiceSystraySecondaryActivateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostServiceSystraySecondaryActivateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostServiceSystrayScrollRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostServiceSystrayScrollResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostServiceSystrayMenuContextActivateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostServiceSystrayMenuContextActivateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostServiceSystrayMenuAboutToShowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostServiceSystrayMenuAboutToShowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostServiceSystrayMenuEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostServiceSystrayMenuEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostServiceNotificationClosedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostServiceNotificationClosedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostServiceNotificationActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostServiceNotificationActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostServiceAudioSinkVolumeAdjustRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostServiceAudioSinkVolumeAdjustResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostServiceAudioSinkMuteToggleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostServiceAudioSinkMuteToggleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostServiceAudioSourceVolumeAdjustRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostServiceAudioSourceVolumeAdjustResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostServiceAudioSourceMuteToggleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostServiceAudioSourceMuteToggleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostServiceBrightnessAdjustRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostServiceBrightnessAdjustResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostServiceCaptureFrameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostServiceCaptureFrameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyprpanel_v1_hyprpanel_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppInfo_Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hyprpanel_v1_hyprpanel_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   43,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_hyprpanel_v1_hyprpanel_proto_goTypes,
		DependencyIndexes: file_hyprpanel_v1_hyprpanel_proto_depIdxs,
		EnumInfos:         file_hyprpanel_v1_hyprpanel_proto_enumTypes,
		MessageInfos:      file_hyprpanel_v1_hyprpanel_proto_msgTypes,
	}.Build()
	File_hyprpanel_v1_hyprpanel_proto = out.File
	file_hyprpanel_v1_hyprpanel_proto_rawDesc = nil
	file_hyprpanel_v1_hyprpanel_proto_goTypes = nil
	file_hyprpanel_v1_hyprpanel_proto_depIdxs = nil
}
